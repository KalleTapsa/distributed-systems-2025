services:
  control:
    container_name: control
    build: control
    cap_add:
     - sys_ptrace
    ports:
      - 5000:8080
    environment:
      - CALCULATOR_URI=calculator:50052
      - KAFKA_URI=kafka:9092
    depends_on:
      - calculator
      - kafka
    networks:
      - monitoring
  pyspy:
    build:
      context: pyspy/
    pid: "host"
    privileged: "true"
    volumes:
      - .:/profiles
  locust:
    image: locustio/locust
    ports:
        - "8089:8089"
    volumes:
        - ./:/mnt/locust
    command: -f /mnt/locust/load_tests.py
    networks:
      - monitoring

  locust-metrics-exporter:
    container_name: locust-metrics-exporter
    image: containersol/locust_exporter
    ports:
        - "9646:9646"
    environment:
        - LOCUST_EXPORTER_URI=http://locust:8089
    depends_on:
        - locust
    networks:
      - monitoring
  calculator:
    build:
      context: calculator
      dockerfile: dockerfile
    ports:
      - 50052:50052
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://root:root@mongo:27017/
      - GRPC_DNS_RESOLVER=native
    networks:
      - monitoring

  producer:
    build:
      context: producer
    depends_on:
      - kafka
    environment:
      KAFKA_URI: kafka:9092
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    volumes: 
      - /proc:/host/proc:ro 
      - /sys:/host/sys:ro 
      - /:/rootfs:ro 
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.rootfs=/rootfs' 
      - '--path.sysfs=/host/sys' 
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks: 
      - monitoring
  prometheus:
    image: prom/prometheus
    container_name: prometheus 
    # command:
    #   - '--config.file=/etc/prometheus.yaml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring
  grafana:
    image: grafana/grafana-enterprise:9.4.7
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=root
      - GF_SECURITY_ADMIN_USER=root
    networks:
      - monitoring
    volumes:
      - 'grafana_storage:/var/lib/grafana'  
  kafka:
    image: docker.io/apache/kafka:latest
    ports:
      - 9092:9092
      - 29092:29092
    # environment:
    #   KAFKA_LISTENERS: PLAINTEXT://kafka:9092
    #   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    #   KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    networks:
      - monitoring
  mongo:
    image: docker.io/mongo:latest
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    image: docker.io/mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH: false

networks:
  default:
    driver: bridge
  monitoring:
    external: true
volumes:
  grafana_storage: {}
  prometheus_data: {}